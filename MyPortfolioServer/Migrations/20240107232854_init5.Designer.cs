// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyPortfolioServer.Context;

#nullable disable

namespace MyPortfolioServer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240107232854_init5")]
    partial class init5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyPortfolioServer.Models.Technology", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Technologies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("28a49190-0fcf-4f6f-9af0-5ac8652ebc51"),
                            Name = ".NET",
                            Status = "Backend",
                            URL = "NET_Core_Logo.svg.png",
                            UserId = new Guid("9d06cf48-edca-4d1d-8f24-6539390b0d1b")
                        },
                        new
                        {
                            Id = new Guid("a03316e8-8d5a-4a01-9ad8-89157e7f98b0"),
                            Name = "MSSQL",
                            Status = "Database",
                            URL = "mssql.png",
                            UserId = new Guid("9d06cf48-edca-4d1d-8f24-6539390b0d1b")
                        },
                        new
                        {
                            Id = new Guid("79285a67-748a-45ca-9368-d4c66c445b38"),
                            Name = "Angular",
                            Status = "Frontend",
                            URL = "angular.png",
                            UserId = new Guid("9d06cf48-edca-4d1d-8f24-6539390b0d1b")
                        },
                        new
                        {
                            Id = new Guid("73f2c54e-461d-457f-98fb-0f5050faba46"),
                            Name = "MongoDB",
                            Status = "Database",
                            URL = "mongo.png",
                            UserId = new Guid("9d06cf48-edca-4d1d-8f24-6539390b0d1b")
                        },
                        new
                        {
                            Id = new Guid("27b7ce4a-a4a4-42c0-9517-f7c0e3992f4d"),
                            Name = "TypeScript",
                            Status = "Frontend",
                            URL = "typescript.png",
                            UserId = new Guid("9d06cf48-edca-4d1d-8f24-6539390b0d1b")
                        },
                        new
                        {
                            Id = new Guid("e801e2d9-09a6-459e-83c7-702372076493"),
                            Name = "JavaScript",
                            Status = "Frontend",
                            URL = "javascript.png",
                            UserId = new Guid("9d06cf48-edca-4d1d-8f24-6539390b0d1b")
                        },
                        new
                        {
                            Id = new Guid("336bd123-0533-46de-a18e-fe2ecdf81158"),
                            Name = "HTML",
                            Status = "Frontend",
                            URL = "html.png",
                            UserId = new Guid("9d06cf48-edca-4d1d-8f24-6539390b0d1b")
                        },
                        new
                        {
                            Id = new Guid("d1801c73-f7ae-4acc-a8df-8976ec44de98"),
                            Name = "CSS",
                            Status = "Frontend",
                            URL = "css.png",
                            UserId = new Guid("9d06cf48-edca-4d1d-8f24-6539390b0d1b")
                        });
                });

            modelBuilder.Entity("MyPortfolioServer.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MyPortfolioServer.Models.UserDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserDetails");
                });

            modelBuilder.Entity("MyPortfolioServer.Models.UserDetail", b =>
                {
                    b.HasOne("MyPortfolioServer.Models.User", null)
                        .WithOne("UserDetail")
                        .HasForeignKey("MyPortfolioServer.Models.UserDetail", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyPortfolioServer.Models.User", b =>
                {
                    b.Navigation("UserDetail")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
